#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseConnection
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ClaimStakerDEV")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTest(Test instance);
    partial void UpdateTest(Test instance);
    partial void DeleteTest(Test instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DatabaseConnection.Properties.Settings.Default.ClaimStakerDEVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Test> Tests
		{
			get
			{
				return this.GetTable<Test>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tests")]
	public partial class Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private System.Nullable<System.DateTime> _DateCreated_DT;
		
		private string _Message_VC;
		
		private string _ExceptionThrower_VC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnDateCreated_DTChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreated_DTChanged();
    partial void OnMessage_VCChanging(string value);
    partial void OnMessage_VCChanged();
    partial void OnExceptionThrower_VCChanging(string value);
    partial void OnExceptionThrower_VCChanged();
    #endregion
		
		public Test()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated_DT", DbType="Date")]
		public System.Nullable<System.DateTime> DateCreated_DT
		{
			get
			{
				return this._DateCreated_DT;
			}
			set
			{
				if ((this._DateCreated_DT != value))
				{
					this.OnDateCreated_DTChanging(value);
					this.SendPropertyChanging();
					this._DateCreated_DT = value;
					this.SendPropertyChanged("DateCreated_DT");
					this.OnDateCreated_DTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message_VC", DbType="VarChar(MAX)")]
		public string Message_VC
		{
			get
			{
				return this._Message_VC;
			}
			set
			{
				if ((this._Message_VC != value))
				{
					this.OnMessage_VCChanging(value);
					this.SendPropertyChanging();
					this._Message_VC = value;
					this.SendPropertyChanged("Message_VC");
					this.OnMessage_VCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionThrower_VC", DbType="VarChar(MAX)")]
		public string ExceptionThrower_VC
		{
			get
			{
				return this._ExceptionThrower_VC;
			}
			set
			{
				if ((this._ExceptionThrower_VC != value))
				{
					this.OnExceptionThrower_VCChanging(value);
					this.SendPropertyChanging();
					this._ExceptionThrower_VC = value;
					this.SendPropertyChanged("ExceptionThrower_VC");
					this.OnExceptionThrower_VCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
