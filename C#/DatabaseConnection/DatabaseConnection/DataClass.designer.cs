#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseConnection
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test")]
	public partial class DataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserInfo_T(UserInfo_T instance);
    partial void UpdateUserInfo_T(UserInfo_T instance);
    partial void DeleteUserInfo_T(UserInfo_T instance);
    partial void InsertOrder_T(Order_T instance);
    partial void UpdateOrder_T(Order_T instance);
    partial void DeleteOrder_T(Order_T instance);
    #endregion
		
		public DataClassDataContext() : 
				base(global::DatabaseConnection.Properties.Settings.Default.TestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo_T> UserInfo_Ts
		{
			get
			{
				return this.GetTable<UserInfo_T>();
			}
		}
		
		public System.Data.Linq.Table<Order_T> Order_Ts
		{
			get
			{
				return this.GetTable<Order_T>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User
	{
		
		private decimal _User_ID;
		
		private string _UserName_VC;
		
		public User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName_VC", DbType="VarChar(50)")]
		public string UserName_VC
		{
			get
			{
				return this._UserName_VC;
			}
			set
			{
				if ((this._UserName_VC != value))
				{
					this._UserName_VC = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo_T")]
	public partial class UserInfo_T : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrderID;
		
		private long _UserID;
		
		private string _UserFirstName_VC;
		
		private string _UserLastName_VC;
		
		private System.Nullable<System.DateTime> _DateJoined_DT;
		
		private string _Address_VC;
		
		private EntityRef<UserInfo_T> _UserInfo_T2;
		
		private EntityRef<UserInfo_T> _UserInfo_T4;
		
		private EntityRef<UserInfo_T> _UserInfo_T1;
		
		private EntityRef<UserInfo_T> _UserInfo_T3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnUserFirstName_VCChanging(string value);
    partial void OnUserFirstName_VCChanged();
    partial void OnUserLastName_VCChanging(string value);
    partial void OnUserLastName_VCChanged();
    partial void OnDateJoined_DTChanging(System.Nullable<System.DateTime> value);
    partial void OnDateJoined_DTChanged();
    partial void OnAddress_VCChanging(string value);
    partial void OnAddress_VCChanged();
    #endregion
		
		public UserInfo_T()
		{
			this._UserInfo_T2 = default(EntityRef<UserInfo_T>);
			this._UserInfo_T4 = default(EntityRef<UserInfo_T>);
			this._UserInfo_T1 = default(EntityRef<UserInfo_T>);
			this._UserInfo_T3 = default(EntityRef<UserInfo_T>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if ((this._UserInfo_T1.HasLoadedOrAssignedValue || this._UserInfo_T3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFirstName_VC", DbType="VarChar(50)")]
		public string UserFirstName_VC
		{
			get
			{
				return this._UserFirstName_VC;
			}
			set
			{
				if ((this._UserFirstName_VC != value))
				{
					this.OnUserFirstName_VCChanging(value);
					this.SendPropertyChanging();
					this._UserFirstName_VC = value;
					this.SendPropertyChanged("UserFirstName_VC");
					this.OnUserFirstName_VCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastName_VC", DbType="VarChar(50)")]
		public string UserLastName_VC
		{
			get
			{
				return this._UserLastName_VC;
			}
			set
			{
				if ((this._UserLastName_VC != value))
				{
					this.OnUserLastName_VCChanging(value);
					this.SendPropertyChanging();
					this._UserLastName_VC = value;
					this.SendPropertyChanged("UserLastName_VC");
					this.OnUserLastName_VCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateJoined_DT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateJoined_DT
		{
			get
			{
				return this._DateJoined_DT;
			}
			set
			{
				if ((this._DateJoined_DT != value))
				{
					this.OnDateJoined_DTChanging(value);
					this.SendPropertyChanging();
					this._DateJoined_DT = value;
					this.SendPropertyChanged("DateJoined_DT");
					this.OnDateJoined_DTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_VC", DbType="VarChar(50)")]
		public string Address_VC
		{
			get
			{
				return this._Address_VC;
			}
			set
			{
				if ((this._Address_VC != value))
				{
					this.OnAddress_VCChanging(value);
					this.SendPropertyChanging();
					this._Address_VC = value;
					this.SendPropertyChanged("Address_VC");
					this.OnAddress_VCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_T_UserInfo_T", Storage="_UserInfo_T2", ThisKey="UserID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public UserInfo_T UserInfo_T2
		{
			get
			{
				return this._UserInfo_T2.Entity;
			}
			set
			{
				UserInfo_T previousValue = this._UserInfo_T2.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo_T2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo_T2.Entity = null;
						previousValue.UserInfo_T1 = null;
					}
					this._UserInfo_T2.Entity = value;
					if ((value != null))
					{
						value.UserInfo_T1 = this;
					}
					this.SendPropertyChanged("UserInfo_T2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_T_UserInfo_T1", Storage="_UserInfo_T4", ThisKey="UserID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public UserInfo_T UserInfo_T4
		{
			get
			{
				return this._UserInfo_T4.Entity;
			}
			set
			{
				UserInfo_T previousValue = this._UserInfo_T4.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo_T4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo_T4.Entity = null;
						previousValue.UserInfo_T3 = null;
					}
					this._UserInfo_T4.Entity = value;
					if ((value != null))
					{
						value.UserInfo_T3 = this;
					}
					this.SendPropertyChanged("UserInfo_T4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_T_UserInfo_T", Storage="_UserInfo_T1", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserInfo_T UserInfo_T1
		{
			get
			{
				return this._UserInfo_T1.Entity;
			}
			set
			{
				UserInfo_T previousValue = this._UserInfo_T1.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo_T1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo_T1.Entity = null;
						previousValue.UserInfo_T2 = null;
					}
					this._UserInfo_T1.Entity = value;
					if ((value != null))
					{
						value.UserInfo_T2 = this;
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("UserInfo_T1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_T_UserInfo_T1", Storage="_UserInfo_T3", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserInfo_T UserInfo_T3
		{
			get
			{
				return this._UserInfo_T3.Entity;
			}
			set
			{
				UserInfo_T previousValue = this._UserInfo_T3.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo_T3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo_T3.Entity = null;
						previousValue.UserInfo_T4 = null;
					}
					this._UserInfo_T3.Entity = value;
					if ((value != null))
					{
						value.UserInfo_T4 = this;
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("UserInfo_T3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_T")]
	public partial class Order_T : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrderID;
		
		private string _OrderName_VC;
		
		private System.Nullable<System.DateTime> _OrderDate_DT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnOrderName_VCChanging(string value);
    partial void OnOrderName_VCChanged();
    partial void OnOrderDate_DTChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDate_DTChanged();
    #endregion
		
		public Order_T()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderName_VC", DbType="VarChar(50)")]
		public string OrderName_VC
		{
			get
			{
				return this._OrderName_VC;
			}
			set
			{
				if ((this._OrderName_VC != value))
				{
					this.OnOrderName_VCChanging(value);
					this.SendPropertyChanging();
					this._OrderName_VC = value;
					this.SendPropertyChanged("OrderName_VC");
					this.OnOrderName_VCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate_DT", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate_DT
		{
			get
			{
				return this._OrderDate_DT;
			}
			set
			{
				if ((this._OrderDate_DT != value))
				{
					this.OnOrderDate_DTChanging(value);
					this.SendPropertyChanging();
					this._OrderDate_DT = value;
					this.SendPropertyChanged("OrderDate_DT");
					this.OnOrderDate_DTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
